// <auto-generated />
using System;
using Data_Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DomainModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModiefiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6082),
                            Description = "Phone",
                            ModiefiedBy = 1,
                            ModifiedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6109),
                            Name = "Smartphone"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6114),
                            Description = "Phone",
                            ModiefiedBy = 1,
                            ModifiedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6116),
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6118),
                            Description = "Different brands of computers and computer parts",
                            ModiefiedBy = 1,
                            ModifiedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6119),
                            Name = "PC and Hardware"
                        });
                });

            modelBuilder.Entity("DomainModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModiefiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6142),
                            Description = "7'2 10GB RAM 256GB storage",
                            ImageUrl = "samsung-galaxy.png",
                            ModiefiedBy = 1,
                            ModifiedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6143),
                            Name = "Samsung Galaxy 23",
                            Price = 1000m,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6148),
                            Description = "6'8 8GB RAM 256GB storage",
                            ImageUrl = "pocox3pro.png",
                            ModiefiedBy = 1,
                            ModifiedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6150),
                            Name = "Poco X3 Pro",
                            Price = 1100m,
                            StockQuantity = 35
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6152),
                            Description = "16GB RAM GREAT GPU GREAT CPU",
                            ImageUrl = "pocox3pro.png",
                            ModiefiedBy = 1,
                            ModifiedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6154),
                            Name = "Cooler Master",
                            Price = 2000m,
                            StockQuantity = 15
                        });
                });

            modelBuilder.Entity("DomainModels.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModiefiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Very noice",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6172),
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fblog.hubspot.com%2Fmarketing%2Fwrite-itunes-review&psig=AOvVaw1vSOy7VyhSVJRPBEpPddjG&ust=1724350044829000&source=images&cd=vfe&opi=89978449&ved=0CBIQjRxqFwoTCOirp9fWhogDFQAAAAAdAAAAABAE",
                            ModiefiedBy = 1,
                            ModifiedOn = new DateTime(2024, 8, 21, 20, 37, 27, 555, DateTimeKind.Local).AddTicks(6174),
                            ProductId = 1,
                            Rating = 5,
                            ReviewerName = "Sasho"
                        });
                });

            modelBuilder.Entity("DomainModels.Product", b =>
                {
                    b.HasOne("DomainModels.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DomainModels.Review", b =>
                {
                    b.HasOne("DomainModels.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DomainModels.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DomainModels.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
